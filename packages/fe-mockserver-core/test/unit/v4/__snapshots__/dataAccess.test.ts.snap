// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Data Access $expand depending on target key property name 1:* - key property names are different 1`] = `
{
  "ID": "",
  "_differentIdMany": [],
}
`;

exports[`Data Access $expand depending on target key property name 1:* - key property names are equal 1`] = `
{
  "ID": "",
  "_sameIdMany": [],
}
`;

exports[`Data Access $expand depending on target key property name 1:1 - key property names are different 1`] = `
{
  "ID": "",
  "_differentId": {
    "ID_B": "",
  },
}
`;

exports[`Data Access $expand depending on target key property name 1:1 - key property names are equal 1`] = `
{
  "ID": "",
  "_sameId": {
    "ID": "",
  },
}
`;

exports[`Data Access $select handling with structured complex types can read /A 1`] = `
[
  {
    "ID": "A1",
    "complex": {
      "subcomplex": {
        "A": "",
        "B": "Hey",
        "C": 0,
      },
      "subcomplexNotNull": {
        "A": "",
        "B": "",
        "C": 0,
      },
      "value1": 1,
      "value2": 2,
      "value3": 0,
    },
    "complexNotNull": {
      "subcomplex": {
        "A": "",
        "B": "",
        "C": 0,
      },
      "subcomplexNotNull": {
        "A": "",
        "B": "",
        "C": 0,
      },
      "value1": 0,
      "value2": 0,
      "value3": 0,
    },
  },
]
`;

exports[`Data Access $select handling with structured complex types can read /A('A1') 1`] = `
{
  "ID": "A1",
  "complex": {
    "subcomplex": {
      "A": "",
      "B": "Hey",
      "C": 0,
    },
    "subcomplexNotNull": {
      "A": "",
      "B": "",
      "C": 0,
    },
    "value1": 1,
    "value2": 2,
    "value3": 0,
  },
  "complexNotNull": {
    "subcomplex": {
      "A": "",
      "B": "",
      "C": 0,
    },
    "subcomplexNotNull": {
      "A": "",
      "B": "",
      "C": 0,
    },
    "value1": 0,
    "value2": 0,
    "value3": 0,
  },
}
`;

exports[`Data Access $select handling with structured complex types can read /A('A1')/b 1`] = `
[
  {
    "UID": "B1",
    "a_ID": "A1",
    "complex": {
      "value1": true,
      "value2": false,
    },
  },
]
`;

exports[`Data Access $select handling with structured complex types can read /A('A1')/b('B1')?$select=complex 1`] = `
{
  "UID": "B1",
  "complex": {
    "value1": true,
    "value2": false,
  },
}
`;

exports[`Data Access $select handling with structured complex types can read /A('A1')/b('B1')?$select=complex/value1 1`] = `
{
  "UID": "B1",
  "complex": {
    "value1": true,
    "value2": false,
  },
}
`;

exports[`Data Access $select handling with structured complex types can read /A('A1')/b?$select=complex 1`] = `
[
  {
    "UID": "B1",
    "complex": {
      "value1": true,
      "value2": false,
    },
  },
]
`;

exports[`Data Access $select handling with structured complex types can read /A('A1')/b?$select=complex/value1 1`] = `
[
  {
    "UID": "B1",
    "complex": {
      "value1": true,
      "value2": false,
    },
  },
]
`;

exports[`Data Access $select handling with structured complex types can read /A('A1')?$expand=b 1`] = `
{
  "ID": "A1",
  "b": [
    {
      "UID": "B1",
      "a_ID": "A1",
      "complex": {
        "value1": true,
        "value2": false,
      },
    },
  ],
  "complex": {
    "subcomplex": {
      "A": "",
      "B": "Hey",
      "C": 0,
    },
    "subcomplexNotNull": {
      "A": "",
      "B": "",
      "C": 0,
    },
    "value1": 1,
    "value2": 2,
    "value3": 0,
  },
  "complexNotNull": {
    "subcomplex": {
      "A": "",
      "B": "",
      "C": 0,
    },
    "subcomplexNotNull": {
      "A": "",
      "B": "",
      "C": 0,
    },
    "value1": 0,
    "value2": 0,
    "value3": 0,
  },
}
`;

exports[`Data Access $select handling with structured complex types can read /A('A1')?$expand=b($select=complex) 1`] = `
{
  "ID": "A1",
  "b": [
    {
      "UID": "B1",
      "complex": {
        "value1": true,
        "value2": false,
      },
    },
  ],
  "complex": {
    "subcomplex": {
      "A": "",
      "B": "Hey",
      "C": 0,
    },
    "subcomplexNotNull": {
      "A": "",
      "B": "",
      "C": 0,
    },
    "value1": 1,
    "value2": 2,
    "value3": 0,
  },
  "complexNotNull": {
    "subcomplex": {
      "A": "",
      "B": "",
      "C": 0,
    },
    "subcomplexNotNull": {
      "A": "",
      "B": "",
      "C": 0,
    },
    "value1": 0,
    "value2": 0,
    "value3": 0,
  },
}
`;

exports[`Data Access $select handling with structured complex types can read /A('A1')?$expand=b($select=complex/value1) 1`] = `
{
  "ID": "A1",
  "b": [
    {
      "UID": "B1",
      "complex": {
        "value1": true,
        "value2": false,
      },
    },
  ],
  "complex": {
    "subcomplex": {
      "A": "",
      "B": "Hey",
      "C": 0,
    },
    "subcomplexNotNull": {
      "A": "",
      "B": "",
      "C": 0,
    },
    "value1": 1,
    "value2": 2,
    "value3": 0,
  },
  "complexNotNull": {
    "subcomplex": {
      "A": "",
      "B": "",
      "C": 0,
    },
    "subcomplexNotNull": {
      "A": "",
      "B": "",
      "C": 0,
    },
    "value1": 0,
    "value2": 0,
    "value3": 0,
  },
}
`;

exports[`Data Access $select handling with structured complex types can read /A('A1')?$select=complex 1`] = `
{
  "ID": "A1",
  "complex": {
    "subcomplex": {
      "A": "",
      "B": "Hey",
      "C": 0,
    },
    "subcomplexNotNull": {
      "A": "",
      "B": "",
      "C": 0,
    },
    "value1": 1,
    "value2": 2,
    "value3": 0,
  },
}
`;

exports[`Data Access $select handling with structured complex types can read /A('A1')?$select=complex/value1 1`] = `
{
  "ID": "A1",
  "complex": {
    "subcomplex": {
      "A": "",
      "B": "Hey",
      "C": 0,
    },
    "subcomplexNotNull": {
      "A": "",
      "B": "",
      "C": 0,
    },
    "value1": 1,
    "value2": 2,
    "value3": 0,
  },
}
`;

exports[`Data Access $select handling with structured complex types can read /A?$expand=b 1`] = `
[
  {
    "ID": "A1",
    "b": [
      {
        "UID": "B1",
        "a_ID": "A1",
        "complex": {
          "value1": true,
          "value2": false,
        },
      },
    ],
    "complex": {
      "subcomplex": {
        "A": "",
        "B": "Hey",
        "C": 0,
      },
      "subcomplexNotNull": {
        "A": "",
        "B": "",
        "C": 0,
      },
      "value1": 1,
      "value2": 2,
      "value3": 0,
    },
    "complexNotNull": {
      "subcomplex": {
        "A": "",
        "B": "",
        "C": 0,
      },
      "subcomplexNotNull": {
        "A": "",
        "B": "",
        "C": 0,
      },
      "value1": 0,
      "value2": 0,
      "value3": 0,
    },
  },
]
`;

exports[`Data Access $select handling with structured complex types can read /A?$expand=b($select=complex) 1`] = `
[
  {
    "ID": "A1",
    "b": [
      {
        "UID": "B1",
        "complex": {
          "value1": true,
          "value2": false,
        },
      },
    ],
    "complex": {
      "subcomplex": {
        "A": "",
        "B": "Hey",
        "C": 0,
      },
      "subcomplexNotNull": {
        "A": "",
        "B": "",
        "C": 0,
      },
      "value1": 1,
      "value2": 2,
      "value3": 0,
    },
    "complexNotNull": {
      "subcomplex": {
        "A": "",
        "B": "",
        "C": 0,
      },
      "subcomplexNotNull": {
        "A": "",
        "B": "",
        "C": 0,
      },
      "value1": 0,
      "value2": 0,
      "value3": 0,
    },
  },
]
`;

exports[`Data Access $select handling with structured complex types can read /A?$expand=b($select=complex/value1) 1`] = `
[
  {
    "ID": "A1",
    "b": [
      {
        "UID": "B1",
        "complex": {
          "value1": true,
          "value2": false,
        },
      },
    ],
    "complex": {
      "subcomplex": {
        "A": "",
        "B": "Hey",
        "C": 0,
      },
      "subcomplexNotNull": {
        "A": "",
        "B": "",
        "C": 0,
      },
      "value1": 1,
      "value2": 2,
      "value3": 0,
    },
    "complexNotNull": {
      "subcomplex": {
        "A": "",
        "B": "",
        "C": 0,
      },
      "subcomplexNotNull": {
        "A": "",
        "B": "",
        "C": 0,
      },
      "value1": 0,
      "value2": 0,
      "value3": 0,
    },
  },
]
`;

exports[`Data Access $select handling with structured complex types can read /A?$select=complex 1`] = `
[
  {
    "ID": "A1",
    "complex": {
      "subcomplex": {
        "A": "",
        "B": "Hey",
        "C": 0,
      },
      "subcomplexNotNull": {
        "A": "",
        "B": "",
        "C": 0,
      },
      "value1": 1,
      "value2": 2,
      "value3": 0,
    },
  },
]
`;

exports[`Data Access $select handling with structured complex types can read /A?$select=complex/value1 1`] = `
[
  {
    "ID": "A1",
    "complex": {
      "subcomplex": {
        "A": "",
        "B": "Hey",
        "C": 0,
      },
      "subcomplexNotNull": {
        "A": "",
        "B": "",
        "C": 0,
      },
      "value1": 1,
      "value2": 2,
      "value3": 0,
    },
  },
]
`;

exports[`Data Access v4metadata - GET with $filter involving a navigation property that is null for some elements 1`] = `
[
  {
    "ID": 0,
    "part2": {
      "ID": 0,
      "number": 1,
    },
    "part2_ID": 0,
  },
]
`;
